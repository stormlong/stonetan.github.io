<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[分布式session问题]]></title>
    <url>%2F2019%2F03%2F03%2F%E5%88%86%E5%B8%83%E5%BC%8Fsession%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[最近这几天一直在研究nginx负载均衡服务器，也实现了通过nginx服务器把用户的请求分发到了不同的tomcat上。但随之也遇到了一个问题，就是如何不同tomcat之间的session同步问题。 以前我们通常是单台tomcat部署一个小应用，请求量也不是很高，所以没有采用nginx服务器负载，这时候用户的请求都是由这一台tomcat服务器处理，所以不存在用户sesson不同步的情况。 现在随着业务拓展，用户量的增加，导致单一的tomcat不足以支撑整个业务，所以采用tomcat集群来处理用户的高并发需求，用nginx来做负载均衡。但是不同的tomcat之间信息不互通，这就有问题了。假如用户请求通过nginx分发到tomcat集群中一台服务器，登陆了系统，然后用户又发起另一个请求，通过nginx的分发，恰巧分到了没有登陆过的tomcat上了，这时，用户则又需要登陆一次。假设每次请求都恰巧分到了没有登陆过的服务器，那对于用户来说，这体验简直是糟糕透了。 所以急需解决tomcat集群中session同步问题，也就是分布式session问题。网上有几种解决方案，但最流行的则是通过redis缓存来解决。 以我的理解来说，这种解决方案就是 当用户登陆时，首先去redis服务器中查找用户的jsessionid，如果存在，则直接取出用户的session信息。如果不村在，则把用户的jsessionid作为redis的key, session信息作为 value存储在redis数据库中。每当有请求过来时，总会查询一次内存数据库，判断用户是否存在，这样就解决了分布式session问题。 不知道理解的对不对，欢迎大佬们指正。]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[定制NexT主题]]></title>
    <url>%2F2018%2F10%2F04%2F%E5%AE%9A%E5%88%B6NexT%E4%B8%BB%E9%A2%98%2F</url>
    <content type="text"><![CDATA[简介:Hexo 是高效的静态站点生成框架，她基于 Node.js。在前面安装好这个框架后，我们可以选择多套主题来展示我们的博客样式风格。这里是这个框架包含的主题样式。本案例采用nexT主题风格，可以参考官方使用文档。当你看到这篇博客的风格时，这就是所谓nexT主题了！ 在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件。 安装 NexTHexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。 下载主题如果你熟悉 Git， 建议你使用 克隆最新版本 的方式，之后的更新可以通过 git pull 来快速更新， 而不用再次下载压缩包替换。 在终端窗口下，定位到 Hexo 站点目录下。右键选择 Git Bash，执行以下命令。 git clone https://github.com/iissnan/hexo-theme-next themes/next 如果你对 Git 感兴趣，可以参考这个在线文档。 启用主题打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。 theme: next 到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。 验证主题首先启动 Hexo 本地站点，命令是 hexo s。 使用浏览器访问 http://localhost:4000，检查站点是否正确运行。 当你看到页面出现内容时，说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse 主题设定选择 SchemeScheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持四种 Scheme，他们是： Muse 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 Mist Muse 的紧凑版本，整洁有序的单栏外观 Pisces 双栏 Scheme，小家碧玉似的清新 Gemini 与Pisces类似，布局风格不同 Scheme 的切换通过更改 主题配置文件，搜索 scheme 关键字。 你会看到有四行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。 # Schemes #scheme: Muse #scheme: Mist #scheme: Pisces scheme: Gemini 设置 语言编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下： language: zh-Hans 设置 菜单菜单配置包括两个部分，第一是菜单项（名称和链接）菜单项对应的图标，第二是菜单项的显示文本。 编辑 主题配置文件，修改以下内容： 设定菜单内容对应的字段是 menu。 菜单内容的设置格式是：item name: link || icon name。其中 item name 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。icon name 该菜单显示的图标名称。可以在 menu_icons: enable: true 这里关闭图标，把true改为false即可 菜单示例配置 menu: home: / || home #about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive 设置菜单项的显示文本在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。 以简体中文为例，若你需要添加一个菜单项，比如 something。那么就需要修改简体中文对应的翻译文件 languages/zh-Hans.yml，在 menu 字段下添加一项： menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 commonweal: 公益404 something: 有料 设置 头像编辑 主题配置文件， 修改字段 avatar， 值设置成头像的链接地址。把头像图片放置在 source/images/ 目录下配置为：avatar: /images/avatar.png 设置 作者昵称编辑 站点配置文件， 设置 author 为你的昵称。 站点描述编辑 站点配置文件， 设置 description 字段为你的站点描述。站点描述可以是你喜欢的一句签名:) 主题配置NexT 坚持将复杂的细节隐藏，提供尽量少并且简便的设置，保持最大限度的易用性。 添加「标签」页面新建「标签」页面，并在菜单中显示「标签」链接。「标签」页面将展示站点的所有标签，若你的所有文章都未包含标签，此页面将是空的。 底下代码是一篇包含标签的文章的例子： title: 标签测试文章 tags: - Testing - Another Tag --- 新建页面在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 tags ： hexo new page tags 设置页面类型编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下： title: 标签 date: 2018-10-04 12:39:04 type: &quot;tags&quot; --- 修改菜单在菜单中添加链接。编辑 主题配置文件 ， 添加 tags 到 menu 中，如下: menu: home: / archives: /archives tags: /tags 注意：如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如： title: 标签 date: 2018-10-04 12:39:04 type: &quot;tags&quot; comments: false --- 添加「分类」页面新建「分类」页面，并在菜单中显示「分类」链接。「分类」页面将展示站点的所有分类，若你的所有文章都未包含分类，此页面将是空的。 底下代码是一篇包含分类的文章的例子： title: 分类测试文章 categories: Testing --- 新建页面在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ： hexo new page categories 设置页面类型编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。页面内容如下： title: 分类 date: 2018-10-04 12:39:04 type: &quot;categories&quot; --- 修改菜单在菜单中添加链接。编辑 主题配置文件 ， 添加 categories 到 menu 中，如下: menu: home: / archives: /archives categories: /categories 注意如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 comments 并将值设置为 false，如： title: 分类 date: 2018-10-04 12:39:04 type: &quot;categories&quot; comments: false --- 侧边栏社交链接侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中。 链接 || 图标链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址 || 链接的图标。 配置示例： social: GitHub: https://github.com/your-user-name || github 微博: http://weibo.com/your-user-name || weibo #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter 开启打赏功能 只需要 主题配置文件 中填入 微信 和 支付宝 收款二维码图片地址 即可开启该功能。 打赏功能配置示例 reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！ wechatpay: /images/wechat-reward-image alipay: /images/alipay-reward-image 二维码可以放在主题文件 source\images下 友情链接编辑 主题配置文件 添加： # title links_title: Links links: MacTalk: http://macshuo.com/ Title: http://example.com/ 腾讯公益404页面腾讯公益404页面，寻找丢失儿童，让大家一起关注此项公益事业！效果如下 http://www.ixirong.com/404.html 使用方法，新建 404.html 页面，放到主题的 source 目录下，内容如下： &lt;!DOCTYPE HTML&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt; &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot; charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot; homePageName=&quot;回到我的主页&quot;&gt; &lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; 更改主题配置文件的 menu 菜单链接 menu: home: / || home commonweal: /404.html || heartbeat 站点建立时间这个时间将在站点的底部显示，例如 © 2013 - 2015。 编辑 主题配置文件 配置示例： footer: # Specify the date when the site was setup. # If not defined, current year will be used. since: 2018 订阅微信公众号在每篇文章的末尾显示微信公众号二维码，扫一扫，轻松订阅博客。 在微信公众号平台下载您的二维码，并将它存放于博客source/uploads/目录下。 然后编辑 主题配置文件，如下： wechat_subscriber: enabled: true qcode: /uploads/wechat-qcode.jpg description: 欢迎您扫一扫上面的微信公众号，订阅我的博客！ 设置「背景动画」NexT 自带两种背景动画效果 编辑 主题配置文件， 搜索 canvas_nest 或 three_waves，根据您的需求设置值为 true 或者 false 即可：canvas_nest 配置示例： # Canvas-nest canvas_nest: true 第三方服务集成静态站点拥有一定的局限性，因此我们需要借助于第三方服务来扩展站点的功能。 以下是 NexT 目前支持的第三方服务，你可以根据你的需求集成一些功能进来。 评论系统NexT 支持多款评论系统。 如需取消某个 页面/文章 的评论，在 md 文件的 front-matter 中增加 comments: false 我们这里采用Valine作为自己的评论。这里是官方文档介绍 这个评论系统是基于LeanCloud的，Hexo的博客阅读量统计也是它,官网网址如下，需要注册一个账户。这里是官网链接，可以直接进行注册。LeanCloud官网 获取APP ID 和 APP Key进入控制台后点击左下角创建应用：名字随便起，后面可以更改。 应用创建好以后，进入刚刚创建的应用，选择左下角的设置&gt;应用Key，然后就能看到你的APP ID和APP Key了： 配置valine拿到你的appid和appkey之后，打开主题配置文件 搜索 valine，填入appid 和 appkey valine: enable: true appid: your app id appkey: your app key notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: 这里可以自己填写内容 guest_info: nick,mail,link pageSize: 10 安全域名为了你的数据安全，请设置自己的安全域名： 这里填写自己的网站名即可。 数据统计与分析不蒜子统计全局配置编辑 主题配置文件 中的busuanzi_count的配置项。 编辑 主题配置文件 中的busuanzi_count的配置项。 当enable: true时，代表开启全局开关。若site_uv、site_pv、page_pv的值均为false时，不蒜子仅作记录而不会在页面上显示。 站点UV配置当site_uv: true时，代表在页面底部显示站点的UV值。 site_uv_header和site_uv_footer为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为[site_uv_header]UV值[site_uv_footer]。 # 效果：本站访客数12345人次 site_uv: true site_uv_header: 本站访客数 site_uv_footer: 人次 站点PV配置当site_pv: true时，代表在页面底部显示站点的PV值。 site_pv_header和site_pv_footer为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为[site_pv_header]PV值[site_pv_footer]。 # 效果：本站总访问量12345次 site_pv: true site_pv_header: 本站总访问量 site_pv_footer: 次 页面PV配置当page_pv: true时，代表在文章页面的标题下显示该页面的PV值（阅读数）。 page_pv_header和page_pv_footer为自定义样式配置，相关的值留空时将不显示，可以使用（带特效的）font-awesome。显示效果为[page_pv_header]PV值[page_pv_footer]。 # 效果：本文总阅读量12345次 page_pv: true page_pv_header: 本文总阅读量 page_pv_footer: 次 注意该统计仅仅在页面展示，并没有后台相关的数据，如果想要查看实时统计数据，需要接入百度统计功能 百度统计1.登录 百度统计，如果没有就注册一个，选择站长类型 2.新增网站管理,填写自己的域名。 3.找到代码获取菜单 4.复制 hm.js? 后面那串统计脚本 id，如下图所示： 5.编辑 主题配置文件， 修改字段 baidu_analytics，值设置成你的百度统计脚本 id。 # Baidu Analytics ID baidu_analytics: 你复制的脚本id 6.代码安装检查 点击开始检查即可，如果没有问题就会提示：代码安装正确。 7.可以自己先把网站部署好，然后自己多访问几次，可以用wifi尝试，然后用流量访问。目的就是可以模拟不同ip的用户访问。 8.单击报告，就可以查看网站的实时访客，流量分析，访客分析等数据。 搜索服务NexT 支持集成 Swiftype、 微搜索、Local Search 和 Algolia。 这里采用Local Search,自定义站点内容搜索 1.安装 hexo-generator-searchdb，在站点的根目录下执行以下命令： npm install hexo-generator-searchdb --save 2.编辑 站点配置文件，新增以下内容到任意位置： search: path: search.xml field: post format: html limit: 10000 3.编辑 主题配置文件，启用本地搜索功能： # Local search local_search: enable: true DaoVoice 在线联系首先去注册，这里是官网, 注册时需要邀请码，贴一个435a515a，或者直接点击邀请码的链接。注册后就可以查看你的app_id: 复制app_id，打开/themes/next/layout/_partials/head.swig,在末尾写下如下代码： 点击这里获取代码 接着打开主题配置文件，在最后写下如下代码： # Online contact daovoice: true daovoice_app_id: your app_id 具体样式设计可以在 应用设置–&gt;聊天设置 后边改。 文章阅读次数统计(LeanCloud)在注册完成LeanCloud帐号并验证邮箱之后，我们就可以登录我们的LeanCloud帐号，进行一番配置之后拿到AppID以及AppKey这两个参数即可正常使用文章阅读量统计的功能了。 按照下图操作创建Counter的class，该Class就可以存放我们文章的阅读次数。 复制AppID以及AppKey并在NexT主题的_config.yml文件中我们相应的位置填入即可，正确配置之后文件内容像这个样子: # Show number of visitors to each article. # You can visit https://leancloud.cn get AppID and AppKey. leancloud_visitors: enable: true app_id: your app_id app_key: your app_key 这个时候重新生成部署Hexo博客，应该就可以正常使用文章阅读量统计的功能了。 注意记录文章访问量的唯一标识符是文章的发布日期以及文章的标题，因此请确保这两个数值组合的唯一性，如果你更改了这两个数值，会造成文章阅读数值的清零重计。 如果删除了某一篇文章，要找到后台删除对应这篇文章的统计记录. 右上角的Github样式实现效果有两种： 具体实现方式便是到样式1或者样式2的网站中选择你喜欢的样式，复制其中的代码到themes/next/layout/_layout.swig文件中(放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;的下面)，并把href改为你的github地址。 当前位置百分比效果当滑动鼠标滚轮时,右下角有一个向上的箭头,该箭头的百分比代表你当前所处页面的位置大小。 编辑 主题配置文件，找到scrollpercent属性，设置为true # Scroll percent label in b2t button. scrollpercent: true 其他细节鼠标点击产生爱心效果创建js文件在/themes/next/source/js/src下新建文件love.js 然后复制以下代码到love.js文件中 !function(e,t,a){function n(){c(&quot;.heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}&quot;),o(),r()}function r(){for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)}function o(){var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)}function s(){return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document); 修改_layout.swig在\themes\next\layout_layout.swig文件末尾添加： &lt;!-- 页面点击小红心 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt; 修改文章底部标签样式打开/themes/next/layout/_macro/post.swig文件 搜索 rel=”tag”&gt;#，将 # 换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt; 阅读排行榜设置新建页面hexo n page top 新建页面，会生成 top 目录，编辑其中自动生成的 index.md 文件，将其中的代码替换如下： &lt;div id=&quot;top&quot;&gt;&lt;/div&gt; &lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js&quot;&gt;&lt;/script&gt; &lt;script&gt;AV.initialize(&quot;leancloud_appid&quot;, &quot;leancloud_appkey&quot;);&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var time=0 var title=&quot;&quot; var url=&quot;&quot; var query = new AV.Query(&apos;Counter&apos;); query.notEqualTo(&apos;id&apos;,0); query.descending(&apos;time&apos;); query.limit(1000); query.find().then(function (todo) { for (var i=0;i&lt;1000;i++){ var result=todo[i].attributes; time=result.time; title=result.title; url=result.url; var content=&quot;&lt;p&gt;&quot;+&quot;&lt;font color=&apos;#1C1C1C&apos;&gt;&quot;+&quot;【文章热度:&quot;+time+&quot;℃】&quot;+&quot;&lt;/font&gt;&quot;+&quot;&lt;a href=&apos;&quot;+&quot;你的博客地址&quot;+url+&quot;&apos;&gt;&quot;+title+&quot;&lt;/a&gt;&quot;+&quot;&lt;/p&gt;&quot;; document.getElementById(&quot;top&quot;).innerHTML+=content } }, function (error) { console.log(&quot;error&quot;); }); &lt;/script&gt; 并将其中的 leancloud_appid、leancloud_appkey 和页面链接替换为你的。 配置菜单显示编辑主题配置文件 themes\next_config.yml，添加 top： menu: home: / || home top: /top/ || signal 添加中文显示打开hexo/theme/next/languages/zh-Hans.yml，新增 top 对应的中文 menu: home: 首页 top: 阅读排行 注意如果删除了一篇文章，那么要登陆LeanCloud的控制台，找到 存储-&gt;Counter 在右边展示的列表中删除对应这篇博客的阅读数量记录。 鼠标悬停头像自动旋转打开\themes\next\source\css_common\components\sidebar\sidebar-author.styl 在里面添加如下代码： .site-author-image { display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out; } .site-author-name { margin: $site-author-name-margin; text-align: $site-author-name-align; color: $site-author-name-color; font-weight: $site-author-name-weight; } .site-description { margin-top: $site-description-margin-top; text-align: $site-description-align; font-size: $site-description-font-size; color: $site-description-color; } img:hover { /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg); } /* Z 轴旋转动画 */ @-webkit-keyframes play { 0% { -webkit-transform: rotateZ(0deg); } 100% { -webkit-transform: rotateZ(-360deg); } } @-moz-keyframes play { 0% { -moz-transform: rotateZ(0deg); } 100% { -moz-transform: rotateZ(-360deg); } } @keyframes play { 0% { transform: rotateZ(0deg); } 100% { transform: rotateZ(-360deg); } } 字数统计用于统计文章的字数以及分析出阅读时间。 在主题配置文件中，搜索wordcount，设置为下面这样就可以了： # Post wordcount display settings # Dependencies: https://github.com/willin/hexo-wordcount post_wordcount: item_text: true min2read: true wordcount: true totalcount: true separated_meta: true 文章结束标志新建passage-end-tag.swig文件在路径\themes\next\layout_macro中新建passage-end-tag.swig文件,并添加以下内容： 点击这里获取代码 其中 font-size:14px，数字越大，代表页面显示结束标志的字体就越大。 修改 post.swig 文件在 \themes\next\layout_macro\post.swig中， post-body之后， post-footer之前添加如下代码（post-footer之前两个DIV） &lt;div&gt; {% if not is_index %} {% include 'passage-end-tag.swig' %} {% endif %} &lt;/div&gt; 修改主题配置文件在主题配置文件 _config.yml中添加以下字段开启此功能： # 文章末尾添加“本文结束”标记 passage_end_tag: enabled: true 完成以上设置之后，在每篇文章之后都会添加“本文结束”标记。 文章版权设置打开主题配置文件_config.yml，搜索post_copyright，修改为： # Declare license on posts post_copyright: enable: true license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/ 打开站点配置文件，搜索url,把地址改为自己的博客地址即可： # URL ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos; url: 你的博客地址 root: / permalink: :year/:month/:day/:title/ #permalink: :title/ permalink代表博客生成文章的链接目录，如果想要访问路径简洁些，可以注释掉当前的路径生成方式，启用下面的只含文章标题的生成方式。 网站底部版权信息网站的底部会显示框架hexo的信息，以及你使用的NexT的主题信息，如何去掉显示，按照下面设置即可： copyright: # ------------------------------------------------------------- # Hexo link (Powered by Hexo). powered: false theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false 网站logo设置打开主题配置文件，搜索favicon，按照如下配置： favicon: small: /images/blog-16x16.png medium: /images/blog-32x32.png 把你自己想要展示的logo图片放在themes\next\source\images目录下即可。图片需要放两张，一张为16x16像素，一张32x32像素。注意图片名称与路径设置的要一致。]]></content>
      <categories>
        <category>博客教程</category>
      </categories>
      <tags>
        <tag>next主题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F03%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>博客教程</category>
      </categories>
      <tags>
        <tag>next主题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何发布博客文章]]></title>
    <url>%2F2018%2F10%2F03%2F%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[本教程教大家如何发布自己的博客文章！ 还没有搭建好博客环境的可以参考这篇文章 搭建个人博客 最近是国庆假期，祝大家国庆快乐！ 环境准备博客生成的文章都是以md结尾的，这种文件推荐使用专业支持Markdown语法的编辑器进行打开编辑，例如Windows平台的MarkdownPad可以支持文章的实时预览，效果出众。下面的截图就是安装好的MarkdownPad 2。 下载编辑工具MarkdownPad官方下载连接 MarkdownPad 找到下面截图的位置，然后下载，进行安装。 配置MarkdownPad破解 邮件地址 Soar360@live.com 授权证书 GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ== 破解成功！ 简体中文设置点击TOOLS–Options-editor-Application Language-中文简体 HTML无法渲染点击预览按钮时，提示html无法渲染问题。 解决方案:下载awesomium 官方地址awesomium，找到下图的位置，点击下载安装即可。 开始发布文章给博客添加图片博客有时候需要添加图片说明，才能让文章通俗易懂。 解决方案： 1.在安装Hexo的目录下的_config.yml里的psot_asset_folder:设置为true 2.在安装Hexo的目录下右键选择 Git Bash，执行以下命令 npm install hexo-asset-image --save 安装成功后，在运行hexo n “博客名”来生成md博客时，会在_post目录下看到一个与博客同名的文件夹。 将想要上传的图片先扔到文件夹下，然后在博客中使用markdown的格式引入图片： ![](xxxx/图片名.jpg) 因为博客名和文件夹名字相同，所以不需要绝对路径，只要xxxx是文件夹的名字就可以了。 创建文章在安装Hexo的目录下右键选择 Git Bash hexo n &quot;如何发布博客文章&quot; 双引号内为文章的标题名，可以根据自己的需求自行改动。 这时就会在博客目录下source_posts中生成相应的 如何发布博客文章.md文件,如果你执行了上面添加图片的命令的话，可以看到同时生成了一个同名的文件夹，如果需要添加图片，直接放在这里面，然后在博客内引用即可。 编辑文章对于刚刚产生的md格式的文件，我们就可以用安装好的MarkdownPad来打开。在编辑文章的同时，可以在浏览器预览当前的编辑内容。 这里放一些MarkdownPad常用语法，供大家参考当然也可以用编辑器自带的工具栏快速编辑文章 标题# 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题 ###### 这是六级标题 字体**这是加粗的文字** *这是倾斜的文字*` ***这是斜体加粗的文字*** ~~这是加删除线的文字~~ 图片语法：![图片alt](图片地址 &quot;图片title&quot;) 图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 超链接语法：[超链接名](超链接地址 &quot;超链接title&quot;) title可加可不加 代码语法： 单行代码：代码之间分别用一个反引号包起来 `代码内容` 代码块 function fun(){ echo &quot;这是一句非常牛逼的代码&quot;; } 语法:在代码块后面回车，然后按一个tab键，即可编写代码块 本地预览编辑完成后就可以进行本地预览 hexo g hexo s hexo g 生成本地html文件，hexo s 开启本地服务，可以在localhost:4000查看当前编写的文章。 发布hexo d 将本文推送到github上，然后就可以访问了。]]></content>
      <categories>
        <category>博客教程</category>
      </categories>
      <tags>
        <tag>next主题</tag>
      </tags>
  </entry>
</search>
